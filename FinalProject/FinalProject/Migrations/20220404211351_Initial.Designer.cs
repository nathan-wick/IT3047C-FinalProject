// <auto-generated />
using System;
using FinalProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProject.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20220404211351_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalProject.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameGenreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GamePlatformId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GamePublisherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("GameReleaseDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("GameId");

                    b.HasIndex("GameGenreId");

                    b.HasIndex("GamePlatformId");

                    b.HasIndex("GamePublisherId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            GameGenreId = "shooter",
                            GameName = "Destiny 2",
                            GamePlatformId = "xbox",
                            GamePublisherId = "activision_blizzard",
                            GameReleaseDate = new DateTime(2017, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GameId = 2,
                            GameGenreId = "action_adventure",
                            GameName = "The Elder Scrolls V: Skyrim",
                            GamePlatformId = "windows",
                            GamePublisherId = "bethesda",
                            GameReleaseDate = new DateTime(2011, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GameId = 3,
                            GameGenreId = "action_adventure",
                            GameName = "The Legend of Zelda: Breath of the Wild",
                            GamePlatformId = "nintendo",
                            GamePublisherId = "nintendo",
                            GameReleaseDate = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GameId = 4,
                            GameGenreId = "racing",
                            GameName = "Need for Speed: Hot Pursuit",
                            GamePlatformId = "playstation",
                            GamePublisherId = "electronic_arts",
                            GameReleaseDate = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GameId = 5,
                            GameGenreId = "sports",
                            GameName = "FIFA 21",
                            GamePlatformId = "playstation",
                            GamePublisherId = "electronic_arts",
                            GameReleaseDate = new DateTime(2020, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GameId = 6,
                            GameGenreId = "simulation",
                            GameName = "The Sims",
                            GamePlatformId = "linux",
                            GamePublisherId = "electronic_arts",
                            GameReleaseDate = new DateTime(2020, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GameId = 7,
                            GameGenreId = "shooter",
                            GameName = "PUBG Mobile",
                            GamePlatformId = "android",
                            GamePublisherId = "tencent",
                            GameReleaseDate = new DateTime(2018, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GameId = 8,
                            GameGenreId = "strategy_puzzle",
                            GameName = "The Room: Three",
                            GamePlatformId = "ios",
                            GamePublisherId = "fireproof",
                            GameReleaseDate = new DateTime(2018, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GameId = 9,
                            GameGenreId = "action_adventure",
                            GameName = "Spider-Man",
                            GamePlatformId = "playstation",
                            GamePublisherId = "sony",
                            GameReleaseDate = new DateTime(2018, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GameId = 10,
                            GameGenreId = "action_adventure",
                            GameName = "Shadow of the Tomb Raider",
                            GamePlatformId = "mac",
                            GamePublisherId = "square_enix",
                            GameReleaseDate = new DateTime(2018, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Genre", b =>
                {
                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = "shooter",
                            GenreName = "Shooter"
                        },
                        new
                        {
                            GenreId = "action_adventure",
                            GenreName = "Action/Adventure"
                        },
                        new
                        {
                            GenreId = "simulation",
                            GenreName = "Simulation"
                        },
                        new
                        {
                            GenreId = "racing",
                            GenreName = "Racing"
                        },
                        new
                        {
                            GenreId = "sports",
                            GenreName = "Sports"
                        },
                        new
                        {
                            GenreId = "strategy_puzzle",
                            GenreName = "Strategy/Puzzle"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Platform", b =>
                {
                    b.Property<string>("PlatformId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PlatformName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlatformId");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            PlatformId = "playstation",
                            PlatformName = "Playstation"
                        },
                        new
                        {
                            PlatformId = "nintendo",
                            PlatformName = "Nintendo"
                        },
                        new
                        {
                            PlatformId = "xbox",
                            PlatformName = "Xbox"
                        },
                        new
                        {
                            PlatformId = "windows",
                            PlatformName = "Windows"
                        },
                        new
                        {
                            PlatformId = "mac",
                            PlatformName = "Mac"
                        },
                        new
                        {
                            PlatformId = "linux",
                            PlatformName = "Linux"
                        },
                        new
                        {
                            PlatformId = "android",
                            PlatformName = "Android"
                        },
                        new
                        {
                            PlatformId = "ios",
                            PlatformName = "iOS"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Publisher", b =>
                {
                    b.Property<string>("PublisherId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherId");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            PublisherId = "sony",
                            PublisherName = "Sony"
                        },
                        new
                        {
                            PublisherId = "nintendo",
                            PublisherName = "Nintendo"
                        },
                        new
                        {
                            PublisherId = "microsoft",
                            PublisherName = "Microsoft"
                        },
                        new
                        {
                            PublisherId = "activision_blizzard",
                            PublisherName = "Activision Blizzard"
                        },
                        new
                        {
                            PublisherId = "electronic_arts",
                            PublisherName = " Electronic Arts"
                        },
                        new
                        {
                            PublisherId = "tencent",
                            PublisherName = "Tencent"
                        },
                        new
                        {
                            PublisherId = "bethesda",
                            PublisherName = "Bethesda Softworks"
                        },
                        new
                        {
                            PublisherId = "fireproof",
                            PublisherName = "Fireproof Studios"
                        },
                        new
                        {
                            PublisherId = "square_enix",
                            PublisherName = "Square Enix"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Game", b =>
                {
                    b.HasOne("FinalProject.Models.Genre", "GameGenre")
                        .WithMany()
                        .HasForeignKey("GameGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Platform", "GamePlatform")
                        .WithMany()
                        .HasForeignKey("GamePlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Publisher", "GamePublisher")
                        .WithMany()
                        .HasForeignKey("GamePublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameGenre");

                    b.Navigation("GamePlatform");

                    b.Navigation("GamePublisher");
                });
#pragma warning restore 612, 618
        }
    }
}
